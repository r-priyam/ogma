"use strict";(self.webpackChunkogma=self.webpackChunkogma||[]).push([[422],{9613:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>d});var r=n(9496);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),d=o,f=u["".concat(l,".").concat(d)]||u[d]||m[d]||a;return n?r.createElement(f,s(s({ref:t},c),{},{components:n})):r.createElement(f,s({ref:t},c))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,s=new Array(a);s[0]=u;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:o,s[1]=i;for(var p=2;p<a;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},7792:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>i,contentTitle:()=>l,metadata:()=>p,toc:()=>c,default:()=>u});var r=n(2245),o=n(5903),a=(n(9496),n(9613)),s=["components"],i={id:"ws",title:"Platform WS"},l="@ogma/platform-ws",p={unversionedId:"nestjs/ws/ws",id:"nestjs/ws/ws",isDocsHomePage:!1,title:"Platform WS",description:"The WsParser parser for the OgmaInterceptor. This plugin class parses TCP request and response object to be able to successfully log the data about the request. For more information, check out the @ogma/nestjs-module documentation.",source:"@site/docs/nestjs/ws/ws.md",sourceDirName:"nestjs/ws",slug:"/nestjs/ws/ws",permalink:"/ogma/docs/nestjs/ws/ws",editUrl:"https://github.com/jmcdo29/ogma/edit/main/apps/docs/docs/nestjs/ws/ws.md",tags:[],version:"current",frontMatter:{id:"ws",title:"Platform WS"},sidebar:"mySidebar",previous:{title:"Platform Socket.IO",permalink:"/ogma/docs/nestjs/ws/socket.io"},next:{title:"Custom Parsers",permalink:"/ogma/docs/nestjs/custom"}},c=[{value:"Installation",id:"installation",children:[],level:2},{value:"Usage",id:"usage",children:[{value:"Note",id:"note",children:[],level:3}],level:2}],m={toc:c};function u(e){var t=e.components,n=(0,o.Z)(e,s);return(0,a.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ogmaplatform-ws"},"@ogma/platform-ws"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"WsParser")," parser for the ",(0,a.kt)("inlineCode",{parentName:"p"},"OgmaInterceptor"),". This plugin class parses TCP request and response object to be able to successfully log the data about the request. For more information, check out the ",(0,a.kt)("a",{parentName:"p",href:"../module"},"@ogma/nestjs-module")," documentation."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Nothing special, standard ",(0,a.kt)("inlineCode",{parentName:"p"},"npm i @ogma/platform-ws")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"yarn add @ogma/platform-ws")),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"This plugin is to be used in the ",(0,a.kt)("inlineCode",{parentName:"p"},"OgmaInterceptorOptions")," portion of the ",(0,a.kt)("inlineCode",{parentName:"p"},"OgmaModule")," during ",(0,a.kt)("inlineCode",{parentName:"p"},"forRoot")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"forRootAsync")," registration. It can be used like so:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@Module(\n  OgmaModule.forRoot({\n    interceptor: {\n      ws: WsParser\n    }\n  })\n)\nexport class AppModule {}\n")),(0,a.kt)("h3",{id:"note"},"Note"),(0,a.kt)("p",null,"As the Gateway/Websocket context runs in parallel with the HTTP Context, and as the application configuration is not shared between the two, to bind the ",(0,a.kt)("inlineCode",{parentName:"p"},"OgmaInterceptor")," to the GateWay, you ",(0,a.kt)("strong",{parentName:"p"},"must")," use ",(0,a.kt)("inlineCode",{parentName:"p"},"@UseInterceptor(OgmaInterceptor)")," ",(0,a.kt)("strong",{parentName:"p"},"and")," have ",(0,a.kt)("inlineCode",{parentName:"p"},"OgmaModule.forFeature()")," in the ",(0,a.kt)("inlineCode",{parentName:"p"},"imports")," array of the same module."),(0,a.kt)("p",null,"The method for the ",(0,a.kt)("inlineCode",{parentName:"p"},"WsParser")," is always ",(0,a.kt)("inlineCode",{parentName:"p"},"websocket")," and the ",(0,a.kt)("inlineCode",{parentName:"p"},"protocol")," is always ",(0,a.kt)("inlineCode",{parentName:"p"},"WS"),". Until a better method at determining these values is found, this will be a static value."))}u.isMDXComponent=!0}}]);