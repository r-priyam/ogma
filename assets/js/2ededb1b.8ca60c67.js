"use strict";(self.webpackChunkogma=self.webpackChunkogma||[]).push([[229],{9613:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(9496);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),p=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return o.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,g=d["".concat(s,".").concat(m)]||d[m]||c[m]||r;return n?o.createElement(g,i(i({ref:t},u),{},{components:n})):o.createElement(g,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var p=2;p<r;p++)i[p]=n[p];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},7882:(e,t,n)=>{n.r(t),n.d(t,{frontMatter:()=>l,contentTitle:()=>s,metadata:()=>p,toc:()=>u,default:()=>d});var o=n(2245),a=n(5903),r=(n(9496),n(9613)),i=["components"],l={id:"module",title:"NestJS Module"},s="@ogma/nestjs-module Module",p={unversionedId:"nestjs/module",id:"nestjs/module",isDocsHomePage:!1,title:"NestJS Module",description:"For all of the @ogma/nestjs-module parts, make sure that the @ogma/nestjs-module package is installed using whatever package manger you are using for your project.",source:"@site/docs/nestjs/module.md",sourceDirName:"nestjs",slug:"/nestjs/module",permalink:"/ogma/docs/nestjs/module",editUrl:"https://github.com/jmcdo29/ogma/edit/main/apps/docs/docs/nestjs/module.md",tags:[],version:"current",frontMatter:{id:"module",title:"NestJS Module"},sidebar:"mySidebar",previous:{title:"Logger",permalink:"/ogma/docs/logger"},next:{title:"NestJS Service",permalink:"/ogma/docs/nestjs/service"}},u=[{value:"Root Configuration",id:"root-configuration",children:[{value:"Synchronous Configuration",id:"synchronous-configuration",children:[],level:3},{value:"Asynchronous Configuration",id:"asynchronous-configuration",children:[],level:3},{value:"forRoot Options",id:"forroot-options",children:[{value:"OgmaModuleOptions",id:"ogmamoduleoptions",children:[],level:4},{value:"OgmaServiceOptions",id:"ogmaserviceoptions",children:[],level:4},{value:"OgmaInterceptorOptions",id:"ogmainterceptoroptions",children:[],level:4}],level:3}],level:2},{value:"Feature Configuration",id:"feature-configuration",children:[],level:2}],c={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"ogmanestjs-module-module"},"@ogma/nestjs-module Module"),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"For all of the ",(0,r.kt)("inlineCode",{parentName:"p"},"@ogma/nestjs-module")," parts, make sure that the ",(0,r.kt)("inlineCode",{parentName:"p"},"@ogma/nestjs-module")," package is installed using whatever package manger you are using for your project."))),(0,r.kt)("p",null,"With that out of the way, the package comes with a ",(0,r.kt)("a",{parentName:"p",href:"https://docs.nestjs.com/fundamentals/dynamic-modules"},"Dynamic Nest Module")," ready for use so you can just configure it and go."),(0,r.kt)("h2",{id:"root-configuration"},"Root Configuration"),(0,r.kt)("p",null,"First, we have the root configuration for the package, which should be called once, usually in your ",(0,r.kt)("inlineCode",{parentName:"p"},"AppModule")," or whatever else you end up calling the ",(0,r.kt)("inlineCode",{parentName:"p"},"RootModule"),", which will be imported and used with ",(0,r.kt)("inlineCode",{parentName:"p"},"NestFactory.create"),". Like most Nest packages nowadays, there's both synchronous and async configurations that can be made use of.x"),(0,r.kt)("h3",{id:"synchronous-configuration"},"Synchronous Configuration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"OgmaModule.forRoot({\n  service: {},\n  interceptor: {}\n});\n")),(0,r.kt)("h3",{id:"asynchronous-configuration"},"Asynchronous Configuration"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"OgmaModule.forRootAsync({\n  useClass: OgmaConfigService\n});\n")),(0,r.kt)("p",null,"or"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"OgmaModule.forRootAsync({\n  inject: [ConfigService],\n  useFactory: (config) => ({\n    service: {},\n    interceptor: {}\n  })\n});\n")),(0,r.kt)("h3",{id:"forroot-options"},"forRoot Options"),(0,r.kt)("p",null,"The options that are required for the above methods can be found in the tables below"),(0,r.kt)("h4",{id:"ogmamoduleoptions"},"OgmaModuleOptions"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"name"),(0,r.kt)("th",{parentName:"tr",align:null},"type"),(0,r.kt)("th",{parentName:"tr",align:null},"required"),(0,r.kt)("th",{parentName:"tr",align:null},"description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"service"),(0,r.kt)("td",{parentName:"tr",align:null},"OgmaServiceOptions"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"The options that will be passed on to the Ogma instance")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"interceptor"),(0,r.kt)("td",{parentName:"tr",align:null},"OgmaInterceptorOptions"),(0,r.kt)("td",{parentName:"tr",align:null},"false"),(0,r.kt)("td",{parentName:"tr",align:null},"The options that will be passed to the OgmaModule for the interceptor. This is what sets up the parsers so that the interceptor can do the proper parsing of requests")))),(0,r.kt)("h4",{id:"ogmaserviceoptions"},"OgmaServiceOptions"),(0,r.kt)("p",null,"This is a simple partial of the options available for the ",(0,r.kt)("a",{parentName:"p",href:"../logger#ogma-options"},"Ogma instance"),". For more details, please consult the ",(0,r.kt)("inlineCode",{parentName:"p"},"@ogma/logger")," docs."),(0,r.kt)("h4",{id:"ogmainterceptoroptions"},"OgmaInterceptorOptions"),(0,r.kt)("p",null,"There are four optional properties to the ",(0,r.kt)("inlineCode",{parentName:"p"},"OgmaInterceptorOptions")," ,",(0,r.kt)("inlineCode",{parentName:"p"},"http"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"gql"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"ws"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"rpc"),", ",(0,r.kt)("strong",{parentName:"p"},"but")," one of the four must be provided if the ",(0,r.kt)("inlineCode",{parentName:"p"},"interceptor")," option is not ",(0,r.kt)("inlineCode",{parentName:"p"},"false"),". All of these options are of the same type, a default ",(0,r.kt)("inlineCode",{parentName:"p"},"false")," value, or a reference to a class that extends ",(0,r.kt)("inlineCode",{parentName:"p"},"AbstractInterceptorService"),". The ",(0,r.kt)("inlineCode",{parentName:"p"},"OgmaModule")," will take care of instantiating this class for you, so you just need to provide a reference. Please view the ",(0,r.kt)("a",{parentName:"p",href:"http/platform-express"},(0,r.kt)("inlineCode",{parentName:"a"},"@ogma/platform-express"))," docs for a brief example."),(0,r.kt)("h2",{id:"feature-configuration"},"Feature Configuration"),(0,r.kt)("p",null,"Along with root level configuration, the ",(0,r.kt)("inlineCode",{parentName:"p"},"OgmaModule")," also allows for feature level configuration for setting up ",(0,r.kt)("a",{parentName:"p",href:"./service"},(0,r.kt)("inlineCode",{parentName:"a"},"OgmaServices"))," with specified contexts. These contexts will be added to the logs automatically."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"OgmaModule.forFeature(FooService);\n")),(0,r.kt)("p",null,"You can also use ",(0,r.kt)("inlineCode",{parentName:"p"},"forFeatures")," to register multiple contexts at once"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"OgmaModule.forFeatures([FooService, BarService, FooBarService]);\n")),(0,r.kt)("p",null,"And lastly, if you wish to make the injected services request scoped you can pass on the options for that like so"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"OgmaModule.forFeature(FooService, { addRequestId: true });\n")),(0,r.kt)("p",null,"or for multiple registrations"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ts"},"OgmaModule.forFeatures([\n  {\n    context: FooService,\n    options: { addRequestId: true }\n  },\n  BarService\n]);\n")))}d.isMDXComponent=!0}}]);